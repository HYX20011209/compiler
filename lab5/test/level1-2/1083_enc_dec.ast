program
    Sequence
        FunctionDefine function name: enc, type: int()
            FuncDefParamsNode
                Id	name: a	scope: 1	type: int
            CompoundStmt
                Sequence
                    IfElseStmt
                        BinaryExpr	op: great	type: bool
                            Id	name: a	scope: 1	type: int
                            IntegerLiteral	value: 25	type: int
                        AssignStmt
                            Id	name: a	scope: 1	type: int
                            BinaryExpr	op: add	type: int
                                Id	name: a	scope: 1	type: int
                                IntegerLiteral	value: 60	type: int
                        CompoundStmt
                            Sequence
                                AssignStmt
                                    Id	name: a	scope: 1	type: int
                                    BinaryExpr	op: sub	type: int
                                        Id	name: a	scope: 1	type: int
                                        IntegerLiteral	value: 15	type: int
                    ReturnStmt
                        Id	name: a	scope: 1	type: int
        FunctionDefine function name: dec, type: int()
            FuncDefParamsNode
                Id	name: a	scope: 1	type: int
            CompoundStmt
                Sequence
                    IfElseStmt
                        BinaryExpr	op: great	type: bool
                            Id	name: a	scope: 1	type: int
                            IntegerLiteral	value: 85	type: int
                        AssignStmt
                            Id	name: a	scope: 1	type: int
                            BinaryExpr	op: sub	type: int
                                Id	name: a	scope: 1	type: int
                                IntegerLiteral	value: 59	type: int
                        CompoundStmt
                            Sequence
                                AssignStmt
                                    Id	name: a	scope: 1	type: int
                                    BinaryExpr	op: add	type: int
                                        Id	name: a	scope: 1	type: int
                                        IntegerLiteral	value: 14	type: int
                    ReturnStmt
                        Id	name: a	scope: 1	type: int
        FunctionDefine function name: main, type: int()
            FuncDefParamsNode NULL
            CompoundStmt
                Sequence
                    DeclStmt
                        DefNode	isConst:false	isArray:false
                            Id	name: a	scope: 2	type: int
                            null
                    AssignStmt
                        Id	name: a	scope: 2	type: int
                        IntegerLiteral	value: 400	type: int
                    DeclStmt
                        DefNode	isConst:false	isArray:false
                            Id	name: res	scope: 2	type: int
                            null
                    AssignStmt
                        Id	name: res	scope: 2	type: int
                        FuncCallNode	funcName: enc	 funcType: int()	scope: 0
                            FuncCallParamsNode
                                Id	name: a	scope: 2	type: int
                    AssignStmt
                        Id	name: res	scope: 2	type: int
                        FuncCallNode	funcName: dec	 funcType: int()	scope: 0
                            FuncCallParamsNode
                                Id	name: res	scope: 2	type: int
                    ExprStmtNode
                        FuncCallNode	funcName: putint	 funcType: void()	scope: 0
                            FuncCallParamsNode
                                Id	name: res	scope: 2	type: int
                    AssignStmt
                        Id	name: res	scope: 2	type: int
                        IntegerLiteral	value: 10	type: int
                    ExprStmtNode
                        FuncCallNode	funcName: putch	 funcType: void()	scope: 0
                            FuncCallParamsNode
                                Id	name: res	scope: 2	type: int
                    ReturnStmt
                        IntegerLiteral	value: 0	type: int
